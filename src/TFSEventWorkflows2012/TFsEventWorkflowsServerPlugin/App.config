<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
    <section name="tfsEventConfig" type="artiso.TFSEventWorkflows.TFSEventWorkflowsServerPlugin.TFSEventConfig, artiso.TFSEventWorkflows.TFSEventWorkflowsServerPlugin"/>
  </configSections>

  <tfsEventConfig>
    <tfsEvents>

      <!-- ********** THIS SECTION IS DEPERCATED **********
           ********** FOR CONFIG FILES IN THE    **********
           ********** PLUGINS BINARY DIRECTORIES **********
      -->
      <!-- this version of TfsEventWorkflows can store workflow xaml files and the corresponding
           config files in the version control. This allows a much more flexible configuration.
           Also the binaries of the custom workflow activities can be stored in the version control.
           This simplifies the configuration of multiple app tier infrastructures.
           The version control paths used can be configured using the tool TfsEventWorkflowsConfiguration.exe.
           The following settings are possible
           - path for custom workflow activities - global
           - path for workflow files - global
           - path for workflow files - collection specific
           - path for workflow files under a concrete project - global
           - name of config file used by the TFS web service - global
           - name of config file used by the TFS job agent - global (deprecated)
      -->
      <!-- the config files are stored together with the workflow xaml files.
           Their syntax is still the same, but extended to support the following attributes
           disabled (default: false) - true to disbale the corresponding event workflow
           async (default: false) - true to handle this event in the TFS job agent 
             (the QueueToJobAgent activity and sample workflow are DEPRECTAED now, new configs should use async instead)
           collection (default: <empty>) - collection to apply this event workflow, <empty> means all collections
             (ignored, if the config already resides in collection or project specific version control path)
           project (default: <empty>) - project to apply this event workflow, <empty> means all projects
             (ignored, if the config already resides in project specific version control path)
           trace (default: false) - true to trace the workflow execution
      -->

      <!-- WorkItemChangedEvent - use empty workflow to test logging -->
      <!-- Attention: ## TFS<=2013.0 eventAssemblyName="Microsoft.TeamFoundation.WorkItemTracking.Server.Dataaccesslayer"
                      ## TFS>=2013.2 eventAssemblyName="Microsoft.TeamFoundation.WorkItemTracking.Server" -->
      <!-- 
      <add name="workItemChangedEvent.EmptyWorkflow" 
           fullTypeName="Microsoft.TeamFoundation.WorkItemTracking.Server.WorkItemChangedEvent" 
           eventAssemblyName="Microsoft.TeamFoundation.WorkItemTracking.Server" 
           workflowFileName="EmptyWorkflow.xaml"
           disabled="false"
           async="false"
           trace="false"
           />
      -->

      <!-- WorkItemChangedEvent - use workflow to delegate to TfsJobAgent -->
      <!-- Attention: ## TFS<=2013.0 eventAssemblyName="Microsoft.TeamFoundation.WorkItemTracking.Server.Dataaccesslayer"
                      ## TFS>=2013.2 eventAssemblyName="Microsoft.TeamFoundation.WorkItemTracking.Server" -->
      <!-- 
      <add name="workItemChangedEvent.DumpWorkitem"
           fullTypeName="Microsoft.TeamFoundation.WorkItemTracking.Server.WorkItemChangedEvent"
           eventAssemblyName="Microsoft.TeamFoundation.WorkItemTracking.Server"
           workflowFileName="DumpWorkitem.xaml"
           disabled="false"
           async="false"
           trace="false"
           />
      -->

      <!-- 
      <add name="checkInEvent.CheckInNotificationWorkflow"
           fullTypeName="Microsoft.TeamFoundation.VersionControl.Server.CheckinNotification"
           eventAssemblyName="Microsoft.TeamFoundation.VersionControl.Server"
           workflowFileName="CheckInNotificationWorkflow.xaml" 
           asnc="true"
           />
      -->

      <!-- 
      <add name="buildQualityChangedEvent.BuildQualityChangedWorkflow"
           fullTypeName="Microsoft.TeamFoundation.Build.Server.BuildQualityChangedNotificationEvent"
           eventAssemblyName="Microsoft.TeamFoundation.Build.Server"
           workflowFileName="BuildQualityChangedWorkflow.xaml" 
           asnc="true"
           />
      -->

      <!-- 
      <add name="buildCompletionEvent.BuildCompletionWorkflow"
           fullTypeName="Microsoft.TeamFoundation.Build.Server.BuildCompletionNotificationEvent"
           eventAssemblyName="Microsoft.TeamFoundation.Build.Server"
           workflowFileName="BuildCompletionWorkflow.xaml"
           asnc="true"
           />
      -->

      <!-- 
      <add name="buildDefinitionChangedEvent.BuildDefinition.StoreInVerisonControl" 
            fullTypeName="Microsoft.TeamFoundation.Build.Server.BuildDefinitionChangedEvent" 
            eventAssemblyName="Microsoft.TeamFoundation.Build.Server" 
            workflowFileName="BuildDefinition.StoreInVerisonControl.xaml" 
            asnc="true"
            />
      -->

      <!-- 
      <add name="buildDefinitionChangedEvent.BuildDefinitionChangedTriggerBuild" 
            fullTypeName="Microsoft.TeamFoundation.Build.Server.BuildDefinitionChangedEvent" 
            eventAssemblyName="Microsoft.TeamFoundation.Build.Server" 
            workflowFileName="BuildDefinitionChangedTriggerBuild.xaml" 
            asnc="true"
            />
      -->
      
      <!-- 
      <add name="testSuiteChangedEvent.TestSuiteChangedWorkflow"
           fullTypeName="Microsoft.TeamFoundation.TestManagement.Server.TestSuiteChangedNotification"
           eventAssemblyName="Microsoft.TeamFoundation.TestManagement.Server"
           workflowFileName="TestSuiteChangedWorkflow.xaml" 
           asnc="true"
           />
      -->
      
    </tfsEvents>

  </tfsEventConfig>

  <log4net>
    
    <!-- ********** LOG4NET CONFIGURATION               **********
         ********** adjust the path for the file        **********
         ********** and ensure that the service account **********
         ********** has write access                    **********
         ********** ATTENTION:                          **********
         ********** ensure to use different files       **********
         ********** for web service and job agent       **********
    -->
    
    <!-- tfs web services appender -->
    <appender name="TfsEventWorkflow-WebServiceAppender" type="log4net.Appender.FileAppender">
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <file type="log4net.Util.PatternString" value="C:\Temp\TfsEventWorkflows\Logs\tew-%date{yyyy-MM-dd}-WebService-[%-15.15appdomain].log"/>
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%date{yyyy-MM-dd HH:mm:ss.fff} %-5level [%-15.15appdomain] [%-30.30thread] %-50.50logger{2}  | %message %exception %newline"/>
      </layout>
    </appender>
    <!-- tfs job agent appender -->
    <!--
    <appender name="TfsEventWorkflow-JobAgentAppender" type="log4net.Appender.FileAppender">
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <file type="log4net.Util.PatternString" value="C:\Temp\TfsEventWorkflows\Logs\tew-%date{yyyy-MM-dd}-JobAgent.log"/>
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%date{yyyy-MM-dd HH:mm:ss.fff} %-5level [%-15.15appdomain] [%-30.30thread] %-50.50logger{2}  | %message %exception %newline"/>
      </layout>
    </appender>
    -->
    
    <root>
      <!--Logging level:
      ALL: Shows all messages
      ERROR: Only critical erros in the workflow-->
      <level value="ALL"/>
      <appender-ref ref="TfsEventWorkflow-WebServiceAppender"/>
      <!--<appender-ref ref="TfsEventWorkflow-JobAgentAppender"/>-->
    </root>
    
  </log4net>

  <appSettings>
  </appSettings>

<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1"/></startup></configuration>
